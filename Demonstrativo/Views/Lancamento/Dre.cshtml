@{
    ViewData["Title"] = "Imprimir DRE";
}
@model TrimestreViewModel
@using System.Globalization;

<div class="py-4 pl-3 d-flex justify-content-between mt-3 print-none">
    <h1 class="page-title">@ViewData["Title"]</h1>
</div>

<button onclick="handlePrint(event)" id="btnPrint" class="floatBtnLancamento btn btn-plumas" data-toggle="tooltip" data-placement="top" title="Imprimir">

    <i class="fa-solid fa-print fa-2x"></i>
</button>
@{
    var numeroSkip = 0;
    var numeroTake = 9;
    var indexCategoria = 0;


    var caraDaMorte01 = Model.Categorias.Where(f => f.Descricao == "DESPESAS MENSAIS FIXAS").FirstOrDefault();
    var caraDaMorte02 = Model.Categorias.Where(f => f.Descricao == "OUTRAS DESPESAS OPERACIONAIS").FirstOrDefault();
    var caraDaMorte = Model.Categorias.Where(f => f.Descricao == "CONTAS A RECEBER").FirstOrDefault();
    var categorias = Model.Categorias.Where(f => f.Descricao != "CONTAS A RECEBER" && f.Descricao != "OUTRAS DESPESAS OPERACIONAIS" && f.Descricao != "DESPESAS MENSAIS FIXAS").ToList();
    categorias.Add(caraDaMorte);
    categorias.Add(caraDaMorte01);
    categorias.Add(caraDaMorte02);
    var emp = Model.Empresas.FirstOrDefault(f => Convert.ToInt32(f.Value) == Model.EmpresaSelecionada);

    //decimal totalTrimestre = 0;
    //decimal estoqueInicial = 0;
    //decimal estoqueFinal = 0;
    //decimal lucroBruto = 0;
    //decimal custoMercadoriaVendida = 0;
    //decimal somaReceitaTrimestre = 0;
    //decimal somaCompraTrimestre = 0;
    //decimal somaDespesaTrimestre = 0;
    //foreach (var trimestre in Model.Trimestre)
    //{

    //    decimal somaReceita = 0;
    //    foreach (var receita in Model.LancamentosReceita.Where(l => l.Data.Month == trimestre))
    //    {
    //        somaReceita += receita.Valor;
    //    }
    //    somaReceitaTrimestre += somaReceita;

    //}
    //if (Model.LancamentosCompra != null)
    //{
    //    foreach (var compra in Model.LancamentosCompra.Where(l => l.Conta == 101))
    //    {
    //        estoqueFinal += compra.Valor;
    //    }
    //    foreach (var trimestre in Model.Trimestre)
    //    {
    //        decimal somaCompra = 0;
    //        foreach (var compra in Model.LancamentosCompra.Where(l => l.Data.Month == trimestre))
    //        {
    //            somaCompra += compra.Valor;
    //        }
    //        somaCompraTrimestre += somaCompra;

    //    }

    //}
    //if (Model.LancamentosDespesa != null)
    //{
    //    foreach (var trimestre in Model.Trimestre)
    //    {
    //        decimal somaDespesa = 0;
    //        foreach (var despesa in Model.LancamentosDespesa.Where(l => l.Data.Month == trimestre))
    //        {
    //            somaDespesa += despesa.Valor;
    //        }

    //        somaDespesaTrimestre += somaDespesa;
    //    }
    //}
    //custoMercadoriaVendida = estoqueInicial + totalTrimestre - estoqueFinal;
    //lucroBruto = somaReceitaTrimestre - custoMercadoriaVendida;


}

<div id="dre" class="row text-small mx-auto">
    <div class="col-12 px-5 mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <img width="250"
                 src="https://plumascontabil.com.br/wp-content/uploads/2019/06/LOGO_AJUSTADO_NOVO.png" />
            <div>
                Demonstrativo de Pré-Fechamento Contábil(@Model.CompetenciaSelecionadaId.ToString("MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("pt-BR")))
                <p>@emp.Text</p>
            </div>
        </div>
    </div>

    @while (numeroSkip < categorias.Count)
    {


        <div class="col-4">
            <table class="table table-bordered mx-auto">
                @foreach (var categoria in categorias.Skip(numeroSkip).Take(numeroTake))
                {
                    <thead>
                        <tr>
                            <th colspan="3">@categoria.Descricao</th>
                        </tr>
                    </thead>

                    @for (var indexConta = 0; indexConta < categoria.Contas.Count; indexConta++)
                    {
                        var conta = categoria.Contas[indexConta];
                        <tbody>
                            @for (int indexLancamento = 0; indexLancamento < conta.Lancamentos.Count; indexLancamento++)
                            {
                                var lancamento = conta.Lancamentos[indexLancamento];
                                var valorLanc = string.Format(CultureInfo.GetCultureInfo("pt-BR"), "{0:C}", lancamento.Valor);
                                <tr>
                                    <td class="codigo">
                                        @conta.Codigo
                                    </td>
                                    <td class="descricao">
                                        @if (lancamento.PodeDigitarDescricao)
                                        {
                                            @lancamento.Descricao
                                        }
                                        else
                                        {
                                            if (lancamento.Descricao != null)
                                            {
                                                @lancamento.Descricao
                                            }
                                            else
                                            {
                                                @conta.Descricao

                                            }
                                        }
                                    </td>
                                    <td class="px-1 mask-valor">
                                        @valorLanc
                                    </td>
                                </tr>
                            }
                        </tbody>
                    }
                    indexCategoria++;
                }
            </table>
        </div>


        numeroSkip += numeroTake;
    }


    <div class="col-12">
        <div class="row">
            <div class="col-6">
                <p class="mb-0">
                    Plumas Assessoria <br />
                    Contábilplumas@plumascontabil.com.br<br />
                    Tel.: (11) 2023-9999
                </p>
            </div>
            <div class="col-6">
                <p class="text-right mb-0">
                    Demonstrativo de Pré-Fechamento Contábil<br />
                    por Centro de Custo(@Model.CompetenciaSelecionadaId.ToString("MMM/yyyy", System.Globalization.CultureInfo.GetCultureInfo("pt-BR")))<br />

                    @emp.Text
                </p>
            </div>
        </div>
    </div>

    <div class="col-12">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th colspan="3"></th>

                    <th>RESULTADO</th>
                </tr>
            </thead>

            <tbody>
                @{
                    //decimal totalTrimestre = 0;
                    decimal estoqueInicial = 0;
                    decimal estoqueFinal = 0;
                    decimal custoMercadoriaVendida = 0;
                    decimal somaCompraTrimestre = 0;

                    if (Model.LancamentosCompra == null)
                    {
                        <tr>
                            <td colspan="3" class="bg-categoria text-white p-2">Compras</td>
                            <td class="bg-categoria text-white p-2"></td>
                        </tr>
                    }
                    else
                    {

                        foreach (var compra in Model.LancamentosCompra.Where(l => l.Conta == 100))
                        {
                            estoqueInicial += compra.Valor;
                        }
                        <tr>
                            <td colspan="3" class="descricao" style="border-right-color: transparent">
                                ESTOQUE INICIAL
                            </td>

                            <td class="valor mask-valor">@estoqueInicial</td>
                        </tr>
                    }





                    int j = 1;
                    foreach (var trimestre in Model.Trimestre)
                    {
                        decimal somaCompra = 0;
                        foreach (var compra in Model.LancamentosCompra.Where(l => l.Data.Month == trimestre && l.Conta == null))
                        {
                            somaCompra += compra.Valor;
                        }
                        <tr>
                            <td colspan="3">Total Compras @j o. mês</td>
                            <td class="mask-valor">@somaCompra</td>
                        </tr>
                        somaCompraTrimestre += somaCompra;
                        j++;
                    }

                    <tr>
                        <td colspan="3">Total Trimestre</td>
                        <td class="mask-valor">@somaCompraTrimestre</td>
                    </tr>
                    foreach (var compra in Model.LancamentosCompra.Where(l => l.Conta == 101))
                    {
                        estoqueFinal += compra.Valor;
                    }
                    <tr><td colspan="3"></td></tr>
                    <tr>
                        <td colspan="3">( - ) Estoque Final</td>
                        <td class="mask-valor">@estoqueFinal</td>
                    </tr>
                    <tr><td colspan="3"></td></tr>
                    custoMercadoriaVendida = estoqueInicial + somaCompraTrimestre - estoqueFinal;

                    <tr>
                        <td colspan="3" class="descricao" style="border-right-color: transparent">
                            ( = ) Custo das Mercadorias Vendidas
                        </td>

                        <td class="valor mask-valor">@custoMercadoriaVendida</td>
                    </tr>

                    decimal lucroBruto = 0;
                    if (Model.LancamentosReceita == null)
                    {
                        <tr><td colspan="3"></td></tr>
                    }
                    else
                    {
                        decimal somaReceitaTrimestre = 0;
                        j = 1;
                        foreach (var trimestre in Model.Trimestre)
                        {

                            decimal somaReceita = 0;
                            foreach (var receita in Model.LancamentosReceita.Where(l => l.Data.Month == trimestre))
                            {
                                somaReceita += receita.Valor;
                            }
                            <tr>
                                <td colspan="3">Total Receitas @j o. mês</td>
                                <td class="mask-valor">@somaReceita</td>
                            </tr>
                            somaReceitaTrimestre += somaReceita;
                            j++;

                        }
                        lucroBruto = custoMercadoriaVendida - somaReceitaTrimestre;
                        if (somaReceitaTrimestre == 0)
                        {
                            <tr>
                                <td colspan="3">Total Receitas Trimestre</td>
                                <td class="mask-valor">@somaReceitaTrimestre</td>
                            </tr>
                            <tr>
                                <td colspan="3">( = ) Lucro Bruto (R$)</td>
                                <td class="mask-valor">@lucroBruto</td>
                            </tr>
                            <tr><td colspan="3"></td></tr>
                            <tr>
                                <td colspan="3">( = ) Margem Bruta Total em %</td>
                                <td class="mask-valor"></td>
                            </tr>
                        }
                        else
                        {
                            var margemLucroBruto = (lucroBruto / somaReceitaTrimestre) * 100;
                            <tr>
                                <td colspan="3">Total Receitas Trimestre</td>
                                <td class="mask-valor">@somaReceitaTrimestre</td>
                            </tr>

                            <tr><td colspan="3"></td></tr>
                            <tr>
                                <td colspan="3">( = ) Lucro Bruto (R$)</td>
                                <td class="mask-valor">@lucroBruto</td>
                            </tr>
                            <tr><td colspan="3"></td></tr>
                            <tr>
                                <td colspan="3">( = ) Margem Bruta Total em %</td>
                                <td class="mask-valorDecimal">@Math.Round(margemLucroBruto,2)</td>
                            </tr>
                            <tr><td colspan="3"></td></tr>
                        }
                    }

                    decimal somaDespesaTrimestre = 0;
                    if (Model.LancamentosDespesa == null)
                    {
                        <tr><td colspan="3"></td></tr>
                    }
                    else
                    {
                        j = 1;
                        foreach (var trimestre in Model.Trimestre)
                        {

                            decimal somaDespesa = 0;
                            foreach (var despesa in Model.LancamentosDespesa.Where(l => l.Data.Month == trimestre))
                            {
                                somaDespesa += despesa.Valor;
                            }
                            <tr>
                                <td colspan="3">Total Despesas @j o. mês</td>
                                <td class="mask-valor">@Math.Abs(somaDespesa)</td>
                            </tr>

                            somaDespesaTrimestre += somaDespesa;
                            j++;

                        }
                        <tr>
                            <td colspan="3">Total trimestre</td>
                            <td class="mask-valor">@Math.Abs(somaDespesaTrimestre) </td>
                        </tr>
                        <tr><td colspan="3"></td></tr>
                    }


                    <tr>
                        <td colspan="3">
                            ( - ) Provisão de 13° Salário
                        </td>
                        <td class="mask-valor">
                            @*<input type="text" class="mask-valor" name="ProvisoesDepreciacoes.DecimoTerceiroVlr" value="@provisoesDepreciacoes.DecimoTerceiro" onfocus="this.setSelectionRange(0, this.value.length);" />*@
                            @Model.ProvisoesDepreciacoes.DecimoTerceiro
                        </td>
                    </tr>

                    <tr>
                        <td colspan="3">( - ) Provisão de Férias</td>
                        <td class="mask-valor">
                            @* <input type="text" class="mask-valor" name="ProvisoesDepreciacoes.FeriasVlr" value="@provisoesDepreciacoes.Ferias" onfocus="this.setSelectionRange(0, this.value.length);" />*@
                            @Model.ProvisoesDepreciacoes.Ferias
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">( - ) Depreciações</td>
                        <td class="mask-valor">
                            @* <input type="text" class="mask-valor" name="ProvisoesDepreciacoes.DepreciacaoVlr" value="@provisoesDepreciacoes.Depreciacao" onfocus="this.setSelectionRange(0, this.value.length);" />*@
                            @Model.ProvisoesDepreciacoes.Depreciacao
                        </td>
                    </tr>
                    <tr><td colspan="3"></td></tr>
                    <tr>
                        <td colspan="3"> ( - ) Saldo Prejuízos Acumulados </td>
                        <td class="mask-valor">
                            @*<input type="text" class="mask-valor" name="ProvisoesDepreciacoes.SaldoPrejuizoVlr" value="@provisoesDepreciacoes.SaldoPrejuizo" onfocus="this.setSelectionRange(0, this.value.length);" />*@
                            @Model.ProvisoesDepreciacoes.SaldoPrejuizo
                        </td>
                    </tr>
                    <tr><td colspan="3"></td></tr>

                    double prejuizoCompensado = 0;
                    var lucroPeriodo = lucroBruto - somaDespesaTrimestre - @Model.ProvisoesDepreciacoes.DecimoTerceiro - @Model.ProvisoesDepreciacoes.Ferias - @Model.ProvisoesDepreciacoes.Depreciacao;
                    if (@Model.ProvisoesDepreciacoes.CalcularCompesacao)
                    {
                        prejuizoCompensado = (double)lucroPeriodo * 0.3;
                    }
                    <tr>
                        <td colspan="3"> Compesação Prejuízo (30% Lucro do Período) </td>
                        <td>
                            <output class="mask-valor">@prejuizoCompensado</output>
                        </td>
                    </tr>
                    <tr><td colspan="3"></td></tr>
                    //var csll = lucroBruto - somaDespesaTrimestre - provisoesDepreciacoes.DecimoTerceiro - provisoesDepreciacoes.Ferias - provisoesDepreciacoes.Depreciacao - provisoesDepreciacoes.SaldoPrejuizo;
                    var csll = lucroBruto - somaDespesaTrimestre - Model.ProvisoesDepreciacoes.DecimoTerceiro - Model.ProvisoesDepreciacoes.Ferias - Model.ProvisoesDepreciacoes.Depreciacao - Model.ProvisoesDepreciacoes.SaldoPrejuizo;
                    double contribuicaoSocial = 0;
                    double impostoRenda = 0;
                    double adcionalIr = 0;
                    if (Model.ProvisoesDepreciacoes.Apurar)
                    {
                        contribuicaoSocial = (double)csll * 0.09;
                        impostoRenda = (double)csll * 0.15;
                        if (csll > 60000)
                        {
                            adcionalIr = (double)csll * 0.10;
                        }
                    }
                    <tr>
                        <td colspan="3">( = ) Base de Cálculo do CSLL/IRPJ</td>
                        <td>
                            <output class="mask-valor"> @(csll) </output>
                        </td>
                    </tr>
                    <tr><td colspan="3"></td></tr>

                    <tr>
                        <th rowspan="5">
                            <div style="margin-top: 44px; margin-left: 63px" class="d-flex align-items-center">
                                <input style="width:30px" class="m-0" id="apurar" type="checkbox" disabled asp-for="@Model.ProvisoesDepreciacoes.Apurar" />
                                <label class="m-0" for="apurar">Apurar imposto</label>
                            </div>
                        </th>
                        <td colspan="2">( - ) Contribuição Social - 9%</td>
                        <td><output class="mask-valor"> @(contribuicaoSocial) </output></td>
                    </tr>
                    <tr>
                        <td colspan="2" class="py-2"></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td colspan="2">( - ) Imposto de Renda - 15%</td>
                        <td><output class="mask-valor">@impostoRenda </output></td>
                    </tr>
                    <tr>
                        <td colspan="2" class="py-2"></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            ( - ) Adicional do IR (10% sobre excedente de R$60.000,00 do
                            lucro)
                        </td>
                        <td><output class="mask-valor"> @adcionalIr </output></td>
                    </tr>




                    //double contribuicaoSocial = 0;
                    //double impostoRenda = 0;
                    //double adcionalIr = 0;
                    if (@Model.ProvisoesDepreciacoes.Apurar)
                    {
                        contribuicaoSocial = (double)csll * 0.09;
                        impostoRenda = (double)csll * 0.15;
                        if (csll > 60000)
                        {
                            adcionalIr = (double)csll * 0.10;
                        }
                    }


                    <tr><td colspan="3"></td><td></td></tr>

                    <tr><td colspan="3"></td><td></td></tr>



                    <tr>
                        <td colspan="3" style="border-right-color: transparent">
                            ( = ) Prejuízo Real
                        </td>

                        <td class="mask-valor"> @(lucroBruto + Math.Abs(somaDespesaTrimestre))</td>
                    </tr>

                }

                @*<tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    <td class="valor mask-valor"></td>
                    </tr>*@


                @*<tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    <td class="valor mask-valor"></td>
                    </tr>*@
                @*<tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( = ) Lucro Bruto (R$)
                    </td>
                    <td></td>
                    <td class="valor mask-valor">1000</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( = ) Margem Bruta Total em %
                    </td>
                    <td></td>
                    <td class="valor">10,20%</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    <td class="valor"></td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( - ) Despesas - 1º. mês
                    </td>
                    <td></td>
                    <td class="valor mask-valor">1020</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( - ) Despesas - 2º. mês
                    </td>
                    <td></td>
                    <td class="valor mask-valor">1020</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( - ) Despesas - 3º. mês
                    </td>
                    <td></td>
                    <td class="valor mask-valor">1020</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    Total Trimestre
                    </td>
                    <td></td>
                    <td class="valor mask-valor">1020</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    <td class="valor"></td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( - ) Provisão de 13° Salário
                    </td>
                    <td></td>
                    <td class="valor mask-valor">2500</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    <td class="valor"></td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( - ) Provisão de Férias
                    </td>
                    <td></td>
                    <td class="valor mask-valor">2500</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    <td class="valor"></td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( - ) Depreciações
                    </td>
                    <td></td>
                    <td class="valor mask-valor">-2500</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    <td class="valor"></td>
                    </tr>*@
                @*<tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( = ) Prejuízo do Período
                    </td>
                    <td></td>
                    <td class="valor mask-valor">-2500</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    <td class="valor"></td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( - ) Saldo Prejuízos Acumulados R$ 0,00
                    </td>
                    <td> Compesação Prejuízo (30% Lucro do Período)</td>
                    <td class="valor mask-valor">0</td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    </td>
                    <td></td>
                    </tr>
                    <tr>
                    <td class="descricao" style="border-right-color: transparent">
                    ( = ) Base de Cálculo do CSLL/IRPJ
                    </td>
                    <td></td>
                    <td class="valor mask-valor">-14500</td>
                    </tr>

                    <tr>
                    <th rowspan="5">
                    <div style="margin-top: 44px; margin-left: 63px" class="d-flex">
                    <input style="width: 43px !important; margin: 0"
                    id="apurar" disabled
                    type="checkbox" asp-for="@Model.ProvisoesDepreciacoes.Apurar" />
                    <label for="apurar">Apurar imposto</label>
                    </div>
                    </th>
                    <td>( - ) Contribuição Social - 9%</td>
                    <td class="mask-valor">@string.Format(CultureInfo.GetCultureInfo("pt-BR"), "{0:C}", contribuicaoSocial)</td>
                    </tr>
                    <tr>
                    <td class="py-2"></td>
                    <td class="py-2"></td>
                    </tr>
                    <tr>
                    <td>( - ) Imposto de Renda - 15%</td>
                    <td class="mask-valor">@string.Format(CultureInfo.GetCultureInfo("pt-BR"), "{0:C}", impostoRenda)</td>
                    </tr>
                    <tr>
                    <td class="py-2"></td>
                    <td class="py-2"></td>
                    </tr>
                    <tr>
                    <td>
                    ( - ) Adicional do IR (10% sobre excedente de R$60.000,00 do
                    lucro)
                    </td>
                    <td class="mask-valor">@string.Format(CultureInfo.GetCultureInfo("pt-BR"), "{0:C}", adcionalIr)</td>
                    </tr>*@


            </tbody>
        </table>
    </div>

    <div class="col-12" style="font-size: 15px">
        <div class="row">
            <div class="col-6"><h3>Escrita Fiscal</h3></div>
            <div class="col-6"><h3>Verificação</h3></div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="d-flex align-items-center justify-content-between ass-area">
                    <p class="m-0">Responsável</p>
                    <div class="ml-3">
                        <span class="d-inline-block"
                              style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 60px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                        <span class="d-inline-block ml-2"
                              style="
                    width: 220px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                    </div>
                </div>
                <div class="d-flex align-items-center justify-content-between ass-area">
                    <p class="m-0">Líder</p>
                    <div class="ml-3">
                        <span class="d-inline-block"
                              style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 60px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                        <span class="d-inline-block ml-2"
                              style="
                    width: 220px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="d-flex align-items-center justify-content-between ass-area">
                    <p class="m-0">Fernando</p>
                    <div class="ml-3">
                        <span class="d-inline-block"
                              style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 60px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                        <span class="d-inline-block ml-2"
                              style="
                    width: 220px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                    </div>
                </div>
                <div class="d-flex align-items-center justify-content-between ass-area">
                    <p class="m-0">Luiz</p>
                    <div class="ml-3">
                        <span class="d-inline-block"
                              style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 60px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                        <span class="d-inline-block ml-2"
                              style="
                    width: 220px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                    </div>
                </div>
                <div class="d-flex align-items-center justify-content-between ass-area">
                    <p class="m-0">Fabiana</p>
                    <div class="ml-3">
                        <span class="d-inline-block"
                              style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 35px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span><span class="mb-1 d-inline-block">/</span><span class="d-inline-block"
                                                                           style="
                    width: 60px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                        <span class="d-inline-block ml-2"
                              style="
                    width: 220px;
                    height: 24px;
                    border-bottom: solid 1px black;
                  "></span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Combustíveis</th>
                    <th>Estoque Final (LT)</th>
                    <th>Valor Unitário (R$)</th>
                    <th>Estoque Final</th>
                </tr>
            </thead>
            <tbody>
                @{
                    for (int y = 0; y < Model.EstoqueVendas.Produtos.Count; y++)
                    {
                        var produtos = Model.EstoqueVendas.Produtos[y];

                        var itemVenda = Model.EstoqueVendas.ItensVendas?.FirstOrDefault(x => x.ProdutoId == produtos.Id);

                        <tr>
                            <th>
                                @produtos.Nome
                            </th>
                            <td class="mask-decimal">
                                @itemVenda?.Quantidade
                            </td>
                            <td class="mask-valor">
                                @itemVenda?.Preco
                            </td>
                            <td class="mask-valor text-center">
                                @(itemVenda?.Quantidade * itemVenda?.Preco)
                            </td>
                        </tr>
                    }
                }

                <tr colspan="4">
                    <td colspan="4"
                        style="border-right: transparent; border-bottom: transparent">
                        <p class="text-left mb-0 mt-5">Observações</p>
                        <div class="w-100">
                            <textarea rows="5" disabled class="w-100">@Model.EstoqueVendas.Observacao</textarea>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
        <small>
            Obs.: As informações deste demonstrativo são apenas para análise e
            tomada de decisões. <br />Os valoes de CSSL e IRPJ podem sofrer
            alterações.
        </small>
        <div class="d-flex justify-content-end pb-1 border-bottom border-dark">
            <p>@DateTime.Now.ToString("dd/MM/yyyy")</p>
        </div>
        <div class="row">
            <div class="col-6 text-center">
                <p class="mb-0">@Model.Empresas.FirstOrDefault(f => f.Value == Model.EmpresaSelecionada.ToString()).Text</p>
                <h5>ASSINATURA DO CLIENTE</h5>
            </div>
            <div class="col-6 text-center">
                <p class="mb-0">@ViewBag.Consultor</p>
                @* <p>Última exportação(Contábil): 09/02/2022 11:37:27</p>*@
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">

        $(window).on('beforeunload', function (e) {
            console.log(event);
            e.preventDefault();
            e.returnValue = '';
            setTimeout(function () { Ir(); }, 10);
        });
        function Ir() {
            window.location.href = '/Lancamento';
        }
        function handlePrint(event) {
            event.preventDefault();
            let container = document.querySelectorAll(".container");
            let teste = document.querySelectorAll(".print-none");
            const btnPrint = document.getElementById("btnPrint");
            // let textSize = document.querySelector(".text-small");
            // let areaAssinatura = document.querySelectorAll(".ass-area");

            // areaAssinatura.forEach((ass) => {
            //   ass.style.fontSize = "25px";
            // });

            // textSize.classList.remove("text-small");
            // textSize.style.fontSize = "30px";

            container.classList = 'container-fluid'

            btnPrint.classList.add("d-none");
            teste.forEach((item) => {
                item.classList.remove("d-flex");
                item.classList.add("d-none");
            });

            var css = '@@page { size: landscape; }',
                head = document.head || document.getElementsByTagName('head')[0],
                style = document.createElement('style');

            style.type = 'text/css';
            style.media = 'print';

            if (style.styleSheet) {
                style.styleSheet.cssText = css;
            } else {
                style.appendChild(document.createTextNode(css));
            }

            head.appendChild(style);

            window.print();

            teste.forEach((item) => {
                item.classList.remove("d-none");
                item.classList.add("d-flex");
            });
            btnPrint.classList.remove("d-none");
            container.classList = 'container'
            // textSize.classList.add("text-small");
            // areaAssinatura.forEach((ass) => {
            //   ass.style.fontSize = "15px";
            // });
        }
    </script>
}
